name: project_checker

on:
  push:
    branches-ignore:
      - ga-ignore-*
  pull_request:
    branches-ignore:
      - ga-ignore-*

env:
  EXECUTABLES: 'setting_up'

jobs:
  check_coding_style:
    container: ghcr.io/epitech/coding-style-checker:latest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: run coding style checker
        run: |
          check.sh $(pwd) $(pwd)
          exit_status=0;
          while read line ; do
            file=$(echo $line | cut -d: -f1)
            place=$(echo $line | cut -d: -f2)
            tag=$(echo $line | cut -d: -f3)
            code=$(echo $line | cut -d: -f4)
          relative_path=$(realpath --relative-to="$(pwd)" "$file")
            exit_status=1
            echo "::error file=$file,line=$place,col=1::$tag error: $code"
          done < coding-style-reports.log
          exit $exit_status

  check_compilation:
    needs: check_coding_style
    container: epitechcontent/epitest-docker:latest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: test Make on the project
        run: make;
        timeout-minutes: 2

      - name: test Make clean on the project
        run: make clean;
        timeout-minutes: 2

      - name: check the executables of the program
        run: |
          bash -c 'IFS=, read -r -a executables <<< "$EXECUTABLES"
          for exe in "${executables[@]}"; do
            if [ -f $exe ]; then
              exit 0
            else
              echo "error:: binary not found"
            fi
          done'

  running_test:
    needs: check_compilation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: run the tester.sh
        run: make test_run